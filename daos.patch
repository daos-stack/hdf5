diff --git a/testpar/testphdf5.c b/testpar/testphdf5.c
index 1ead1b8..184e5e4 100644
--- a/testpar/testphdf5.c
+++ b/testpar/testphdf5.c
@@ -364,6 +364,8 @@ main(int argc, char **argv)
     AddTest("ecdsetr", extend_readAll, NULL, "extendible dataset collective read", PARATESTFILE);
     AddTest("eidsetw2", extend_writeInd2, NULL, "extendible dataset independent write #2", PARATESTFILE);
     AddTest("selnone", none_selection_chunk, NULL, "chunked dataset with none-selection", PARATESTFILE);
+/* MSC - serial means not MPI-IO, not in DAOS tier */
+#ifdef DAOS_UNSUPPORTED
     AddTest("calloc", test_chunk_alloc, NULL, "parallel extend Chunked allocation on serial file",
             PARATESTFILE);
     AddTest("fltread", test_filter_read, NULL, "parallel read of dataset written serially with filters",
@@ -372,6 +374,7 @@ main(int argc, char **argv)
 #ifdef H5_HAVE_FILTER_DEFLATE
     AddTest("cmpdsetr", compress_readAll, NULL, "compressed dataset collective read", PARATESTFILE);
 #endif /* H5_HAVE_FILTER_DEFLATE */
+#endif /* DAOS_UNSUPPORTED */
 
     AddTest("zerodsetr", zero_dim_dset, NULL, "zero dim dset", PARATESTFILE);
 
@@ -396,7 +399,10 @@ main(int argc, char **argv)
 #else
     HDprintf("big dataset test will be skipped on Windows (JIRA HDDFV-8064)\n");
 #endif
+/** MSC - default fill value of 0 does not work with DAOS */
+#ifdef DAOS_UNSUPPORTED
     AddTest("fill", dataset_fillvalue, NULL, "dataset fill value", PARATESTFILE);
+#endif /* DAOS_UNSUPPORTED */
 
     AddTest("cchunk1", coll_chunk1, NULL, "simple collective chunk io", PARATESTFILE);
     AddTest("cchunk2", coll_chunk2, NULL, "noncontiguous collective chunk io", PARATESTFILE);
@@ -461,12 +467,18 @@ main(int argc, char **argv)
 
     AddTest("actualio", actual_io_mode_tests, NULL, "test actual io mode proprerty", PARATESTFILE);
 
+/* MSC - creates an EFL file using POSIX API */
+#ifdef DAOS_UNSUPPORTED
     AddTest("nocolcause", no_collective_cause_tests, NULL, "test cause for broken collective io",
             PARATESTFILE);
+#endif /* DAOS_UNSUPPORTED */
 
     AddTest("edpl", test_plist_ed, NULL, "encode/decode Property Lists", NULL);
 
+/* MSC - creates an EFL file using POSIX API */
+#ifdef DAOS_UNSUPPORTED
     AddTest("extlink", external_links, NULL, "test external links", NULL);
+#endif /* DAOS_UNSUPPORTED */
 
     if ((mpi_size < 2) && MAINPROCESS) {
         HDprintf("File Image Ops daisy chain test needs at least 2 processes.\n");
@@ -475,6 +487,9 @@ main(int argc, char **argv)
     AddTest((mpi_size < 2) ? "-fiodc" : "fiodc", file_image_daisy_chain_test, NULL,
             "file image ops daisy chain", NULL);
 
+/* MSC - creates an EFL file using POSIX API */
+#ifdef DAOS_UNSUPPORTED
+
     if ((mpi_size < 2) && MAINPROCESS) {
         HDprintf("Atomicity tests need at least 2 processes to participate\n");
         HDprintf("8 is more recommended.. Atomicity tests will be skipped \n");
@@ -486,6 +501,8 @@ main(int argc, char **argv)
         AddTest("atomicity", dataset_atomicity, NULL, "dataset atomic updates", PARATESTFILE);
     }
 
+#endif /* DAOS_UNSUPPORTED */
+
     AddTest("denseattr", test_dense_attr, NULL, "Store Dense Attributes", PARATESTFILE);
 
     AddTest("noselcollmdread", test_partial_no_selection_coll_md_read, NULL,
